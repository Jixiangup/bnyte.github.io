<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Golang-keep_it_up</title>
    <url>/2022/12/05/Golang-keep-it-up/</url>
    <content><![CDATA[<p>本文主要连载自己的<code>Golang</code>学习笔记以及自己遇到的一些坑或者说自己的感悟吧, 这是一个漫长的过程, 如同标题一样 <code>keep it up gogogo....</code></p>
<span id="more"></span>

<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><blockquote>
<p>其实本来不打算写这个引言 既然是 blog 还是写写吧 并不是笔记项目哈哈哈，学这个就是最近学完了<code>python</code>然后想再继续学点吧, 毕竟都说它是<code>Google</code>开源的未来趋势，毕竟<code>k8s</code>, <code>docker</code>等前沿或者应用较为广泛的技术都被应用上了, 而我还在守着<code>Java</code>的一亩三分地自顾自的说着<code>Java No.1</code>倒是有些顽固不化了，说那么多，就不说了 开始吧！！！！</p>
</blockquote>
<blockquote>
<p>本文主要素材内容来源于网络,主要采取<a href="https://go.dev/">Golang 官方文档</a>, 如果引用了其他帮助请见下文的<a href="#%E9%B8%A3%E8%B0%A2">鸣谢</a>，如果我标记错了出处或者对您的版权产生了侵犯，请您谅解我并非有意，这并非一个<code>商用博客</code>，同时您如果对此有任何不满请与<a href="/about">我</a>取得联系, 我将以最快的时间之内对您进行处理，因为我需要工作所以希望您能够耐心的等待。</p>
</blockquote>
<h1 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="选择-IDE"><a href="#选择-IDE" class="headerlink" title="选择 IDE"></a>选择 IDE</h3><p>我是使用的<a href="https://www.jetbrains.com/">JetBrains</a>公司产出的<code>GoLand</code>进行开发，如果你期望使用<a href="https://code.visualstudio.com/">VsCode</a>你可以自行获取解决、集成方案。</p>
<h3 id="安装-Golang"><a href="#安装-Golang" class="headerlink" title="安装 Golang"></a>安装 Golang</h3><p>在<a href="https://go.dev/dl/">Golang 官方下载</a>页下载适合自己系统适用的环境版本, 并且打开直接下一步安装即可。</p>
<p>配置环境变量以及简单创建文件的配置就忽略了…</p>
<h3 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h3><p>创建空文件夹使用<code>goland</code>打开，或者直接在<code>goland</code>中创建工程.</p>
<ul>
<li><p>在项目根目录创建文件<code>go.mod</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 模块名可以直接与工程名相同</span><br><span class="line">module helloworld</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建 main.go 文件</p>
</li>
<li><p>编写<code>main</code>函数</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 没个项目都必须要有一个，并且如果期望运行必须引入且方法中必须包含`main`函数</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="语法介绍"><a href="#语法介绍" class="headerlink" title="语法介绍"></a>语法介绍</h2><h3 id="创建函数"><a href="#创建函数" class="headerlink" title="创建函数"></a>创建函数</h3><ul>
<li><p>语法</p>
<p>主意：当返回值为<code>void</code>时直接缺省。</p>
<blockquote>
<p>func {FUNC_NAME}({NAME} {TYPE}, …. {NAME} {TYPE}) {RESULT_TYPE} { code block… }</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(pre <span class="type">int</span>, next <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> pre + next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="创建变量"><a href="#创建变量" class="headerlink" title="创建变量"></a>创建变量</h3><ul>
<li><p>指定变量类型，如果没有初始化，则变量默认为零值</p>
<blockquote>
<p>var {field_name} {field_type}</p>
<p>{field_name} &#x3D; {field_value}</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="string">&quot;猪猪侠&quot;</span></span><br><span class="line">  fmt.Println(<span class="string">&quot;用户名是:&quot;</span>, name) <span class="comment">// 猪猪侠</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> b <span class="type">int</span></span><br><span class="line">  fmt.Println(<span class="string">&quot;没有初始化值的b:&quot;</span>, b) <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> c <span class="type">bool</span></span><br><span class="line">  fmt.Println(<span class="string">&quot;没有初始化值的c&quot;</span>, <span class="literal">false</span>) <span class="comment">// boolean类型默认为false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>隐式生命语法糖</p>
<p>主意：无法使用在已经使用<code>var</code>声明过的属性上</p>
<blockquote>
<p>{field_name} :&#x3D; {field_value}</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 等价 var number int = 1</span></span><br><span class="line">number := <span class="number">1</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>多变量声明</p>
<blockquote>
<p>类型相同的多个变量，非全局变量</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 等价于 name00, name01 := 1, 2</span></span><br><span class="line"><span class="keyword">var</span> name00, name01 <span class="type">int</span> = <span class="number">1</span>, <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这种因式分解关键字的写法一般用于声明全局变量</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    vname1 v_type1</span><br><span class="line">    vname2 v_type2</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li>
</ul>
<!-- arr1 := [...]int{1, 2, 3} -->

<ul>
<li><p>总结</p>
<p>当函数、属性名的首字母大写时，则该实例会被导出(如 Java 中的<code>public</code>)</p>
</li>
</ul>
<h2 id="本地多模块"><a href="#本地多模块" class="headerlink" title="本地多模块"></a>本地多模块</h2><ul>
<li>创建模块</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go mod init bnyte.com/hello</span><br></pre></td></tr></table></figure>

<ul>
<li>指定查找依赖项为本地</li>
</ul>
<blockquote>
<p>模块名 &#x3D; 模块给予当前路径的路径</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go mod edit -replace bnyte.com/greetings=../greetings</span><br></pre></td></tr></table></figure>

<ul>
<li>添加依赖</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go get bnyte.com/greetings</span><br></pre></td></tr></table></figure>

<ul>
<li>指定模块使用本地模块以及版本</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go mod tidy</span><br></pre></td></tr></table></figure>

<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><ul>
<li><p>抛出异常</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;errors&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  errors.New(<span class="string">&quot;empty name&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>打印异常并中断程序执行</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;errors&quot;</span></span><br><span class="line">  <span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  err := errors.New(<span class="string">&quot;empty name&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置预定义Logger的属性，包括</span></span><br><span class="line">  <span class="comment">// 日志条目前缀和禁用打印的标志</span></span><br><span class="line">  <span class="comment">//  时间、源文件和行号.</span></span><br><span class="line">  log.SetPrefix(<span class="string">&quot;greetings: &quot;</span>)</span><br><span class="line">  log.SetFlags(<span class="number">10</span>)</span><br><span class="line">  log.Fatal(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><h3 id="操作-struct"><a href="#操作-struct" class="headerlink" title="操作 struct"></a>操作 struct</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Account <span class="keyword">struct</span> &#123;</span><br><span class="line">	Id   <span class="type">string</span> <span class="string">`json:&quot;id&quot;`</span></span><br><span class="line">	Name <span class="type">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// testMethod()</span></span><br><span class="line"></span><br><span class="line">	account := Account&#123;&#125;</span><br><span class="line">	typeOf := reflect.TypeOf(account)</span><br><span class="line">	<span class="comment">//align := typeOf.Align()</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; typeOf.NumField(); i++ &#123;</span><br><span class="line">		fmt.Printf(<span class="string">&quot;field&#x27; name is %s, type is %s, tag is %s\n&quot;</span>, typeOf.Field(i).Name, typeOf.Field(i).Type, typeOf.Field(i).Tag.Get(<span class="string">&quot;json&quot;</span>))</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="语法总结"><a href="#语法总结" class="headerlink" title="语法总结"></a>语法总结</h1><ul>
<li><p>不需要使用分号</p>
</li>
<li><p>在 go 中的名称具有语义效果，名称在包外的可见性取决于它的第一个字符是否大些。</p>
</li>
<li><p>导入包时，包名称成为内容的访问器如：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;包名访问方式&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>导入包时同时可以指定别名:</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;f fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  f.Println(<span class="string">&quot;包名访问方式&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在 Go 中是不允许忽略<code>&#123;&#125;</code>(大括号)的，即使代码块中只有一行。</p>
</li>
</ul>
<h1 id="Go-总结"><a href="#Go-总结" class="headerlink" title="Go 总结"></a>Go 总结</h1><ul>
<li><p>在 Go 中<code>string</code>同样属于基本数据类型，使用这些类型的变量直接指向存在内存中的值, 通过<code>&amp;&#123;field_name&#125;</code>来获取到对象内存地址，与此同时值类型变量的值<code>存储在堆</code>中。</p>
</li>
<li><p>在 Go 通过<code>*&#123;field_name&#125;</code>来获取到内存所对应的值。</p>
</li>
</ul>
<h1 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h1><ul>
<li><p>在<code>Go</code>里面必须要配置的是<code>GOROOT</code>和<code>GOPATH</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GOROOT: go安装的根路径</span><br><span class="line">GOPATH: 暂时不知道作用是什么到时候补上</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><ul>
<li><a href="https://go.dev/">Golang</a></li>
<li><a href="https://www.jetbrains.com/">JetBrains</a></li>
</ul>
]]></content>
      <tags>
        <tag>学习</tag>
        <tag>连载</tag>
      </tags>
  </entry>
  <entry>
    <title>KeyCloak</title>
    <url>/2023/04/28/KeyCloak/</url>
    <content><![CDATA[<h1 id="KeyCloak"><a href="#KeyCloak" class="headerlink" title="KeyCloak"></a>KeyCloak</h1><p>Keycloak 是一个开源软件产品，旨在为现代的应用程序和服务，提供包含身份管理和访问管理功能的单点登录工具。截至 2018 年 3 月，红帽公司负责管理这一 JBoss 社区项目，并将其作为他们 RH-SSO 产品的上游项目。从概念的角度上来说，该工具的目的是，只用少量编码甚至不用编码，就能很容易地使应用程序和服务更安全。</p>
<p><a href="https://github.com/bnyte/keyclock-example">代码仓库</a></p>
<span id="more"></span>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><h4 id="在你开始之前"><a href="#在你开始之前" class="headerlink" title="在你开始之前"></a>在你开始之前</h4><p>请确保安装了 Docker</p>
<h4 id="启动-keycloak"><a href="#启动-keycloak" class="headerlink" title="启动 keycloak"></a>启动 keycloak</h4><p>初始化启动并暴露本地端口<code>8080</code>, 并指定管理员账号密码为<code>admin</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -p --name keycloak 8080:8080 -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin quay.io/keycloak/keycloak start-dev</span><br></pre></td></tr></table></figure>

<ul>
<li>KEYCLOAK_ADMIN 管理后台账号</li>
<li>KEYCLOAK_ADMIN_PASSWORD 管理后台密码</li>
</ul>
<h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><h3 id="登陆管理控制台"><a href="#登陆管理控制台" class="headerlink" title="登陆管理控制台"></a>登陆管理控制台</h3><ul>
<li><p>转到 <a href="http://localhost:8080/admin">Keycloak 管理控制台</a>。</p>
</li>
<li><p>使用您之前创建的用户名和密码登录。</p>
</li>
</ul>
<h3 id="创建-realm"><a href="#创建-realm" class="headerlink" title="创建 realm"></a>创建 realm</h3><p>Keycloak 中的 realm 相当于一个租户。每个领域都允许管理员创建隔离的应用程序和用户组。最初，Keycloak 包含一个名为 master. 仅将此领域用于管理 Keycloak，而不用于管理任何应用程序。</p>
<p>使用这些步骤创建第一个 realm。</p>
<ol>
<li>打开 <a href="http://localhost:8080/admin">Keycloak 管理控制台</a>。</li>
<li>单击左上角的<code>master</code>一词，然后单击<code>Create realm</code>，创建名为<code>myrealm</code>的一个新的 realm。</li>
</ol>
<p><img src="https://storage.bnyte.com/blog_img/keycloak/add-realm.png" alt="add-realm"></p>
<h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p>默认情况下 realm 是没有用户的，所以需要手动创建。</p>
<ol>
<li>打开 <a href="http://localhost:8080/admin">Keycloak 管理控制台</a>。</li>
<li>单击左侧菜单中的<code>Users</code> -&gt; <code>Add user</code></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建用户时参数介绍</span><br><span class="line">Required user actions: 用户第一次登陆触发的行为，比如验证邮箱、更新密码等等。可以为空</span><br><span class="line">Username：用户名(用于登陆)</span><br><span class="line">Email: 邮箱地址，可以为空</span><br><span class="line">Email verified: 电子邮件地址是否已经得到验证</span><br><span class="line">First name: 姓?又或者名？这种定义很模糊，所以我也不确定，不过在最后获取到名称是 FirstName + LastName</span><br><span class="line">Last name</span><br><span class="line">Groups: 权限组，可以为空</span><br></pre></td></tr></table></figure>

<p>创建用户之后需要设置密码之后才能登陆，所以还需要设置初始密码</p>
<ol>
<li>进入用户详情点击顶部的<code>Credentials</code>然后设置一个密码并且保存即可。</li>
</ol>
<h3 id="登陆账户控制台"><a href="#登陆账户控制台" class="headerlink" title="登陆账户控制台"></a>登陆账户控制台</h3><p>现在可以登陆到账户控制台以验证此用户是否已正确配置。</p>
<ol>
<li>打开 <a href="http://localhost:8080/realms/myrealm/account">Keycloak 帐户控制台</a>。</li>
</ol>
<blockquote>
<p>当然如果你在创建<code>realm</code>时名称不是<code>myrealm</code>时你只需要按照以下方式改变这个路径就可以访问: <code>http://localhost:8080/realms/$&#123;realm&#125;/account</code></p>
</blockquote>
<ol start="2">
<li>使用你之前创建的用户名和密码登录即可。</li>
</ol>
<h2 id="应用到项目当中"><a href="#应用到项目当中" class="headerlink" title="应用到项目当中"></a>应用到项目当中</h2><blockquote>
<p>这是一个先觉条件，你需要先创建好 client 才能应用到项目当中去</p>
</blockquote>
<ul>
<li><p><code>Clients</code> -&gt; <code>Create client</code></p>
</li>
<li><p>配置信息</p>
<p>Step 1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Client type: 客户端类型，有两个选项我也还在研究先用默认的吧。</span><br><span class="line">  - OpenId Connect:</span><br><span class="line">  - SAML:</span><br><span class="line">Client ID: 这是一个必填项，你需要自行配置，但是这是有用的。指定 URI 和令牌中引用的 ID。例如“我的客户端”。对于 SAML，这也是来自 authn 请求的预期颁发者值</span><br><span class="line">Name: 指定客户端的显示名称。例如“我的客户端”。也支持本地化值的键。例如：$&#123;my_client&#125;</span><br><span class="line">Description: 指定客户端的描述。例如“我的时间表客户端”。也支持本地化值的键。例如：$&#123;my_client_description&#125;</span><br><span class="line">Always display in UI: 始终在帐户 UI 中列出此客户端，即使用户没有活动会话。【不知道干啥用的】</span><br></pre></td></tr></table></figure>

<p>Step 2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这一步的配置我都还没有研究，我直接下一步的，有时间研究一下。</span><br></pre></td></tr></table></figure>

<p>Step 3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Root URL: 附加到相对 URL 的根 URL，这里先暂时不配置</span><br><span class="line">Home URL: 当 auth 服务器需要重定向或链接回客户端时使用的默认 URL。这里也暂时先不配置</span><br><span class="line">Valid redirect URIs: 成功登录后浏览器可以重定向到的有效 URI 模式。允许使用简单的通配符，例如“http://example.com/*”。也可以指定相对路径，例如/my/relative/path/*。相对路径是相对于客户端根 URL 的，或者如果没有指定，则使用身份验证服务器根 URL。对于 SAML，如果您依赖登录请求中嵌入的消费者服务 URL，则必须设置有效的 URI 模式。如刚刚我是用的是umijs，而这里的值只需要加入一个&quot;http://127.0.0.1:8000/*&quot;。</span><br><span class="line">Valid post logout redirect URIs: 成功注销后浏览器可以重定向到的有效 URI 模式。“+”值或空字段将使用有效重定向 URI 列表。“-”值将不允许任何注销后重定向 uris。允许使用简单的通配符，例如“http://example.com/*”。也可以指定相对路径，例如/my/relative/path/*。相对路径是相对于客户端根 URL 的，或者如果没有指定，则使用身份验证服务器根 URL。暂时还不知道干啥用的。</span><br><span class="line">Web origins: 允许的 CORS 来源。要允许有效重定向 URI 的所有来源，请添加“+”。不过，这不包括“*”通配符。要允许所有来源，请明确添加“*”。如刚刚我是用的是umijs，而这里的值只需要加入一个&quot;http://127.0.0.1:8000/*&quot;。</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建完成之后进入<code>Client Detail</code>点击右上角<code>Action</code> -&gt; <code>Download adaptor configs</code>即可获取到详细的配置。</p>
</li>
</ul>
<p>当然，在前端项目中我们登陆之后可以获取到 KeyCloak 的实例对象，而他的实例对象值包含如下结果</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;authenticated&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;loginRequired&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;silentCheckSsoFallback&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;enableLogging&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;messageReceiveTimeout&quot;</span><span class="punctuation">:</span> <span class="number">10000</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;responseMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fragment&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;responseType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;flow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;standard&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;clientId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;example&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;authServerUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:8080/&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;realm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;example&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;endpoints&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;refreshToken&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI0NjZmMWQ5NS0wN2Q5LTQ3ZTAtYWIzNi1jMDZlNzA1NDRkZjAifQ.eyJleHAiOjE2ODMyNjEzMDIsImlhdCI6MTY4MzI1OTUwMiwianRpIjoiMmM0OWQ2ZmMtZjg5OS00ODgzLTg4ZDMtNjNiODJkOTY0MGNiIiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3JlYWxtcy9leGFtcGxlIiwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3JlYWxtcy9leGFtcGxlIiwic3ViIjoiNmMzMDIzNGUtY2IxNi00NDZlLTk0YzAtY2QwM2FjZmUyMzFhIiwidHlwIjoiUmVmcmVzaCIsImF6cCI6ImV4YW1wbGUiLCJub25jZSI6IjY2MWIyNjkyLWJjNDItNDk5OS1hMDViLTZkODIxY2I0NTdkZCIsInNlc3Npb25fc3RhdGUiOiIwNGI1NmU2NS0wYTg1LTRiMTMtODhlNi02NTdmYjk5YzJlZDUiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGVtYWlsIiwic2lkIjoiMDRiNTZlNjUtMGE4NS00YjEzLTg4ZTYtNjU3ZmI5OWMyZWQ1In0.OdzfDO2DM1if_4_0CcuJl_JLOoJYAnR3ABkWzsv5vgw&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;refreshTokenParsed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;exp&quot;</span><span class="punctuation">:</span> <span class="number">1683261302</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;iat&quot;</span><span class="punctuation">:</span> <span class="number">1683259502</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jti&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2c49d6fc-f899-4883-88d3-63b82d9640cb&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;iss&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:8080/realms/example&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aud&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:8080/realms/example&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sub&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6c30234e-cb16-446e-94c0-cd03acfe231a&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;typ&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Refresh&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;azp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;example&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nonce&quot;</span><span class="punctuation">:</span> <span class="string">&quot;661b2692-bc42-4999-a05b-6d821cb457dd&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;session_state&quot;</span><span class="punctuation">:</span> <span class="string">&quot;04b56e65-0a85-4b13-88e6-657fb99c2ed5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openid profile email&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;04b56e65-0a85-4b13-88e6-657fb99c2ed5&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;idToken&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6SDNXLVo4TGhaR0F2WWE3S2NKOHJJalYzdXhGZi0xVFRadks0ZUVnaWFFIn0.eyJleHAiOjE2ODMyNTk4MDIsImlhdCI6MTY4MzI1OTUwMiwiYXV0aF90aW1lIjoxNjgzMjU5NDk3LCJqdGkiOiI4NDkxMWFiOS00NzM4LTQwNmUtYmQzNS05NmRlY2VhZjM2MTgiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvcmVhbG1zL2V4YW1wbGUiLCJhdWQiOiJleGFtcGxlIiwic3ViIjoiNmMzMDIzNGUtY2IxNi00NDZlLTk0YzAtY2QwM2FjZmUyMzFhIiwidHlwIjoiSUQiLCJhenAiOiJleGFtcGxlIiwibm9uY2UiOiI2NjFiMjY5Mi1iYzQyLTQ5OTktYTA1Yi02ZDgyMWNiNDU3ZGQiLCJzZXNzaW9uX3N0YXRlIjoiMDRiNTZlNjUtMGE4NS00YjEzLTg4ZTYtNjU3ZmI5OWMyZWQ1IiwiYXRfaGFzaCI6IjhnYTdSckZiSndQSXluQVB2OC1CanciLCJhY3IiOiIwIiwic2lkIjoiMDRiNTZlNjUtMGE4NS00YjEzLTg4ZTYtNjU3ZmI5OWMyZWQ1IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJkZXYiLCJnaXZlbl9uYW1lIjoiIiwiZmFtaWx5X25hbWUiOiIifQ.RHgN90yoqTnXrSzN-_cIMomzFdb689_lBCfpKR6Idl07qQ22QK0YcJ2Npmlln2-dgHdeE9je6wqTD8c_RSGFGifji7hfLzoghipS0gzC-oxfvzhUb32-8HMMPQfSoor81qY-5i0LgCIbLC-j5POLm8OuzED69i2gRu1lAuG_BUCspLBLC7ylsfVNX_5nMVgv-Th65aJShi6AcZVuGLmKmurKac1kuGosXLVXk44Jv9OEQ5fko_ToEz8eIMHefgOUyqw6bXE0Q-_BDjRc_ZByZOAVW49S13WYLlotine_-ImN8yqZ2D-ELFF4gr0UyNOf9H8hi5TucdWKRomoNyY-OA&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;idTokenParsed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;exp&quot;</span><span class="punctuation">:</span> <span class="number">1683259802</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;iat&quot;</span><span class="punctuation">:</span> <span class="number">1683259502</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;auth_time&quot;</span><span class="punctuation">:</span> <span class="number">1683259497</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jti&quot;</span><span class="punctuation">:</span> <span class="string">&quot;84911ab9-4738-406e-bd35-96deceaf3618&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;iss&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:8080/realms/example&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aud&quot;</span><span class="punctuation">:</span> <span class="string">&quot;example&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sub&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6c30234e-cb16-446e-94c0-cd03acfe231a&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;typ&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ID&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;azp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;example&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nonce&quot;</span><span class="punctuation">:</span> <span class="string">&quot;661b2692-bc42-4999-a05b-6d821cb457dd&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;session_state&quot;</span><span class="punctuation">:</span> <span class="string">&quot;04b56e65-0a85-4b13-88e6-657fb99c2ed5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;at_hash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;8ga7RrFbJwPIynAPv8-Bjw&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;acr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;04b56e65-0a85-4b13-88e6-657fb99c2ed5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;email_verified&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;preferred_username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dev&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;given_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;family_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6SDNXLVo4TGhaR0F2WWE3S2NKOHJJalYzdXhGZi0xVFRadks0ZUVnaWFFIn0.eyJleHAiOjE2ODMyNTk4MDIsImlhdCI6MTY4MzI1OTUwMiwiYXV0aF90aW1lIjoxNjgzMjU5NDk3LCJqdGkiOiJmY2FmNGQ0MC1iZjI3LTRiZWUtYWVjMC04MmRkODA2ZDgzZGEiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvcmVhbG1zL2V4YW1wbGUiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNmMzMDIzNGUtY2IxNi00NDZlLTk0YzAtY2QwM2FjZmUyMzFhIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZXhhbXBsZSIsIm5vbmNlIjoiNjYxYjI2OTItYmM0Mi00OTk5LWEwNWItNmQ4MjFjYjQ1N2RkIiwic2Vzc2lvbl9zdGF0ZSI6IjA0YjU2ZTY1LTBhODUtNGIxMy04OGU2LTY1N2ZiOTljMmVkNSIsImFjciI6IjAiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cDovLzEyNy4wLjAuMTo4MDAwIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsImRlZmF1bHQtcm9sZXMtZXhhbXBsZSIsInVtYV9hdXRob3JpemF0aW9uIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBlbWFpbCIsInNpZCI6IjA0YjU2ZTY1LTBhODUtNGIxMy04OGU2LTY1N2ZiOTljMmVkNSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoiZGV2IiwiZ2l2ZW5fbmFtZSI6IiIsImZhbWlseV9uYW1lIjoiIn0.ZcdXjq78rTa2liT1GTu5pwf6Rnm8s50GHB0xcavZydjw5WNCG2CUuDqszM_ZJSlbPZ99bZ83GHuu64CVk37EjHBI8wjFKRK_jr5IZ4OBCilmAZ2Q_y13cPFD3tDdlxpxBVcQzdcPYmIVrU3KvHRRsurvYPETbQFoqSqRDwTb-MePEKZMkNgt11c3us1gf06EMT-UpZ7yJIF4vBhorZp_hZNv-ZLXQ7NW9FZfnMNp2HrlPmoAbqQJ6PXDyjXInDvRXbC9fxkNLhtD4b-YCHtJViotMSeLjzo_viJA4Al5wmR8rv2EYgMSHa3HToyMOalVl2QubSAqVRqMUdMEUGxwsQ&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tokenParsed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;exp&quot;</span><span class="punctuation">:</span> <span class="number">1683259802</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;iat&quot;</span><span class="punctuation">:</span> <span class="number">1683259502</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;auth_time&quot;</span><span class="punctuation">:</span> <span class="number">1683259497</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jti&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fcaf4d40-bf27-4bee-aec0-82dd806d83da&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;iss&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:8080/realms/example&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aud&quot;</span><span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sub&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6c30234e-cb16-446e-94c0-cd03acfe231a&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;typ&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bearer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;azp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;example&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nonce&quot;</span><span class="punctuation">:</span> <span class="string">&quot;661b2692-bc42-4999-a05b-6d821cb457dd&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;session_state&quot;</span><span class="punctuation">:</span> <span class="string">&quot;04b56e65-0a85-4b13-88e6-657fb99c2ed5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;acr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;allowed-origins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;http://127.0.0.1:8000&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;realm_access&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;roles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;offline_access&quot;</span><span class="punctuation">,</span> <span class="string">&quot;default-roles-example&quot;</span><span class="punctuation">,</span> <span class="string">&quot;uma_authorization&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;resource_access&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;account&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;roles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;manage-account&quot;</span><span class="punctuation">,</span> <span class="string">&quot;manage-account-links&quot;</span><span class="punctuation">,</span> <span class="string">&quot;view-profile&quot;</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openid profile email&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;04b56e65-0a85-4b13-88e6-657fb99c2ed5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;email_verified&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;preferred_username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dev&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;given_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;family_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sessionId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;04b56e65-0a85-4b13-88e6-657fb99c2ed5&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;subject&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6c30234e-cb16-446e-94c0-cd03acfe231a&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;realmAccess&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;roles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;offline_access&quot;</span><span class="punctuation">,</span> <span class="string">&quot;default-roles-example&quot;</span><span class="punctuation">,</span> <span class="string">&quot;uma_authorization&quot;</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;resourceAccess&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;account&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;roles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;manage-account&quot;</span><span class="punctuation">,</span> <span class="string">&quot;manage-account-links&quot;</span><span class="punctuation">,</span> <span class="string">&quot;view-profile&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timeSkew&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="应用到前端-React"><a href="#应用到前端-React" class="headerlink" title="应用到前端(React)"></a>应用到前端(React)</h3><p>这里前端脚手架采用的是 <a href="https://umijs.org/">Umijs</a> 详细介绍和使用文档请参考 <a href="https://umijs.org/">Umijs</a> 官方文档。</p>
<ul>
<li>初始化项目</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn create umi</span><br></pre></td></tr></table></figure>

<ul>
<li>添加必要依赖项</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn add @umijs/plugins</span><br><span class="line">yarn add keycloak-js</span><br></pre></td></tr></table></figure>

<ul>
<li>在 <code>src</code> 下面创建<code>app.ts</code></li>
</ul>
<p><code>src/app.ts</code></p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Keycloak</span> <span class="keyword">from</span> <span class="string">&quot;keycloak-js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化客户端，并且携带数据保存包含nickname和keycloak实例对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span>  https://umijs.org/zh-CN/plugins/plugin-initial-state</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getInitialState</span>(<span class="params"></span>): <span class="title class_">Promise</span>&lt;&#123;</span><br><span class="line">  <span class="attr">nickname</span>: <span class="built_in">string</span> | <span class="literal">undefined</span>;</span><br><span class="line">  <span class="attr">keycloak</span>: <span class="title class_">Keycloak</span>;</span><br><span class="line">&#125;&gt; &#123;</span><br><span class="line">  <span class="comment">// 这个配置从client detail中获取</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">keycloak</span>: <span class="title class_">Keycloak</span> = <span class="keyword">new</span> <span class="title class_">Keycloak</span>(&#123;</span><br><span class="line">    <span class="comment">// 取 auth-server-url</span></span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;http://127.0.0.1:8080/&quot;</span>,</span><br><span class="line">    <span class="comment">// 取 realm</span></span><br><span class="line">    <span class="attr">realm</span>: <span class="string">&quot;example&quot;</span>,</span><br><span class="line">    <span class="comment">// 取 resource</span></span><br><span class="line">    <span class="attr">clientId</span>: <span class="string">&quot;example&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">let</span> nickname;</span><br><span class="line">  <span class="comment">// 初始化keycloak</span></span><br><span class="line">  <span class="keyword">const</span> auth = <span class="keyword">await</span> keycloak.<span class="title function_">init</span>(&#123; <span class="attr">onLoad</span>: <span class="string">&quot;login-required&quot;</span> &#125;);</span><br><span class="line">  <span class="keyword">if</span> (!auth) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="title function_">reload</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// username 登陆用户名</span></span><br><span class="line">    <span class="comment">// nickname = keycloak.tokenParsed?.preferred_username;</span></span><br><span class="line">    <span class="comment">// all name 姓名</span></span><br><span class="line">    nickname = keycloak.<span class="property">tokenParsed</span>?.<span class="property">name</span>;</span><br><span class="line">    <span class="comment">// family name 姓</span></span><br><span class="line">    <span class="comment">// nickname = keycloak.tokenParsed?.family_name;</span></span><br><span class="line">    <span class="comment">// given name 名</span></span><br><span class="line">    <span class="comment">// nickname = keycloak.tokenParsed?.given_name;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    nickname,</span><br><span class="line">    keycloak,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>在 <code>src/pages</code> 下创建 <code>index.tsx</code></li>
</ul>
<p><code>src/pages/index.tsx</code></p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useModel &#125; <span class="keyword">from</span> <span class="string">&quot;umi&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">HomePage</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; initialState &#125; = <span class="title function_">useModel</span>(<span class="string">&quot;@@initialState&quot;</span>) ?? &#123;&#125;;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;initialState&quot;</span>, initialState);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;initialState?.nickname&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">          console.log(&quot;keycloak对象&quot;, initialState?.keycloak);</span></span><br><span class="line"><span class="language-xml">          console.log(&quot;nickname&quot;, initialState?.nickname);</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      &gt;</span></span><br><span class="line"><span class="language-xml">        Login</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">          initialState?.keycloak.logout();</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      &gt;</span></span><br><span class="line"><span class="language-xml">        Logout</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>至此整合就完成了，其他功能再发现吧</li>
</ul>
]]></content>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>系统使用</title>
    <url>/2022/06/16/OsUsing/</url>
    <content><![CDATA[<p>本文主要连载一些系统包括<code>Windows</code>,<code>Linux</code>,<code>Mac</code>等系统日常使用中遇到或写的一些小脚本或者说一些使用技巧等等~</p>
<span id="more"></span>

<h1 id="Changelog"><a href="#Changelog" class="headerlink" title="Changelog"></a>Changelog</h1><h2 id="20220708"><a href="#20220708" class="headerlink" title="20220708"></a>20220708</h2><ul>
<li><a href="#SublimeText3%E8%BF%9E%E6%8E%A5SFTP">SublimeText3 连接 SFTP</a></li>
</ul>
<h2 id="20220708-之前"><a href="#20220708-之前" class="headerlink" title="20220708 之前"></a>20220708 之前</h2><ul>
<li><p><a href="#%E5%BE%AE%E4%BF%A1%E5%A4%9A%E5%BC%80">Windows 微信多开</a></p>
</li>
<li><p><a href="#%E7%A7%91%E5%AD%A6%E4%BD%BF%E7%94%A8Jetbrains">科学使用 Jetbrains</a></p>
</li>
</ul>
<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="微信多开"><a href="#微信多开" class="headerlink" title="微信多开"></a>微信多开</h2><ul>
<li><p>创建<code>.bat</code>可执行脚本文件。</p>
</li>
<li><p>找到<code>wechat.exe</code>的目标地址</p>
</li>
<li><p>键入如下脚本</p>
</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">TASKKILL /F /IM wechat.exe</span><br><span class="line"><span class="built_in">start</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;D:\Tencent\WeChat\WeChat.exe&quot;</span> rem 需要多开的目标地址</span><br><span class="line"><span class="built_in">start</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;D:\Tencent\WeChat\WeChat.exe&quot;</span> rem 需要多开的目标地址</span><br></pre></td></tr></table></figure>

<h1 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h1><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h1 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h1><h2 id="SublimeText3-连接-SFTP"><a href="#SublimeText3-连接-SFTP" class="headerlink" title="SublimeText3 连接 SFTP"></a>SublimeText3 连接 SFTP</h2><ul>
<li><p>下载安装 Sublime text3</p>
</li>
<li><p>&#96;Ctrl+`&#96;打开控制台输入如下代码</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h = &#x27;2915d1851351e5ee549c20394736b442&#x27; + &#x27;8bc59f460fa1548d1514676163dafc88&#x27;; pf = &#x27;Package Control.sublime-package&#x27;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &#x27;http://packagecontrol.io/&#x27; + pf.replace(&#x27; &#x27;, &#x27;%20&#x27;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&#x27;Error validating download (got %s instead of %s), please try manual install&#x27; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &#x27;wb&#x27; ).write(by)</span><br></pre></td></tr></table></figure>

<ul>
<li><p>Preferences -&gt; Browse Packages…..弹出目录后, 下载<a href="https://packagecontrol.io/Package%20Control.sublime-package">插件</a>或访问浏览器下载<code>https://packagecontrol.io/Package Control.sublime-package</code>, 下载完成之后直接将其复制到刚刚打开的文件当中重启</p>
</li>
<li><p><code>Ctrl+Shift+P</code>调出命令面板输入<code>install package</code>按回车等待弹出新的控制弹窗</p>
</li>
<li><p>在弹出的控制弹窗中输入<code>SFTP</code>回车等待下载完成</p>
</li>
<li><p>安装完成之后点击 <code>File -&gt; SFTP/FTP -&gt; MapToRemote 或者 Edit Server</code></p>
</li>
<li><p>自动生成一个 sftp-config.json 文件, 结合自己的情况配置就可以了</p>
</li>
</ul>
<h2 id="科学使用-Jetbrains"><a href="#科学使用-Jetbrains" class="headerlink" title="科学使用 Jetbrains"></a>科学使用 Jetbrains</h2><blockquote>
<p>下面的功能没有特殊标注则表明支持<code>jetbrains</code>家族下面的所有系列产品均可通用~</p>
</blockquote>
<h3 id="使用Reset插件重置"><a href="#使用Reset插件重置" class="headerlink" title="使用Reset插件重置"></a>使用<code>Reset</code>插件重置</h3><blockquote>
<p>仅支持 2021.3 以下 建议使用 2021.2.x 版本</p>
</blockquote>
<h3 id="下载-idea"><a href="#下载-idea" class="headerlink" title="下载 idea"></a>下载 idea</h3><blockquote>
<p><a href="https://download.jetbrains.com/idea/ideaIU-2021.2.2.exe?_gl=1*1c4chbw*_ga*MTA0ODE1ODkwNS4xNjM1NTkwMzE3*_ga_V0XZL7QHEB*MTY0ODM4OTgxNC40LjEuMTY0ODM4OTgyMC4w&_ga=2.223952603.1391899983.1648389815-1048158905.1635590317">点击下载 idea</a></p>
</blockquote>
<p>如果点击下载没有反应可以前往<a href="https://www.jetbrains.com/zh-cn/idea/download/other.html">官网</a>下载</p>
<p><img src="https://blogimg.bytestroll.com/blog_img/idea/1.png"></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li>卸载老版本</li>
</ul>
<p><img src="https://img.chajianxw.com/chajian/164604171691955"></p>
<p><img src="https://img.chajianxw.com/chajian/164604174406150"></p>
<p>安装就是无脑安装下一步(<code>next</code>)就可以了..没什么好说的</p>
<ul>
<li>开始安装</li>
</ul>
<p><img src="https://img.chajianxw.com/chajian/164604330408118"></p>
<p><img src="https://img.chajianxw.com/chajian/164604335389359"></p>
<p><img src="https://img.chajianxw.com/chajian/164604339538384"></p>
<p><img src="https://img.chajianxw.com/chajian/164604343562437"></p>
<p><img src="https://img.chajianxw.com/chajian/164604347765732"></p>
<blockquote>
<p>如果没有试用三十天请自行降低版本</p>
</blockquote>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul>
<li><p>安装完成之后打开</p>
</li>
<li><p>打开插件</p>
</li>
</ul>
<p><img src="https://blogimg.bytestroll.com/blog_img/idea/2.png"></p>
<ul>
<li>添加仓库插件仓库地址<code>plugins.zhile.io</code></li>
</ul>
<p><img src="https://blogimg.bytestroll.com/blog_img/idea/3.png"></p>
<ul>
<li>搜索插件<code>IDE Eval Reset</code></li>
</ul>
<p><img src="https://blogimg.bytestroll.com/blog_img/idea/4.png"></p>
<ul>
<li>开启<code>插件</code></li>
</ul>
<p><img src="https://blogimg.bytestroll.com/blog_img/idea/5.png"></p>
<blockquote>
<p>等待重启，成功，每次<code>重启</code>就会重新<code>刷新试用时间</code>了</p>
</blockquote>
<h1 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks"></a>Thanks</h1><ul>
<li>感谢<code>CSDN</code>用户<a href="https://blog.csdn.net/ZJ__ZFH">ZFH__ZJ</a></li>
</ul>
]]></content>
      <tags>
        <tag>连载</tag>
      </tags>
  </entry>
  <entry>
    <title>React的使用</title>
    <url>/2022/12/19/ReacttUsing/</url>
    <content><![CDATA[<p>一些 React 中的使用经验, 会持续连载</p>
<span id="more"></span>

<h1 id="脚手架"><a href="#脚手架" class="headerlink" title="脚手架"></a>脚手架</h1><h2 id="Create-React-App"><a href="#Create-React-App" class="headerlink" title="Create React App"></a>Create React App</h2><h3 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h3><p>控制台面板使用以下命令快速创建 React App</p>
<blockquote>
<p>TIPS: 请自行替换 <code>&lt;app-name&gt;</code> 的值</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn create react-app &lt;app-name&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;app-name&gt;</span><br><span class="line">yarn start</span><br></pre></td></tr></table></figure>

<p>访问: <code>http://127.0.0.1:3000</code> 或<a href="http://127.0.0.1:3000/">点击访问</a></p>
<h3 id="脚本参数"><a href="#脚本参数" class="headerlink" title="脚本参数"></a>脚本参数</h3><h4 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h4><h5 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h5><blockquote>
<p>参考 <a href="https://create-react-app.dev/docs/adding-typescript/">Create React App</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn create react-app &lt;app-name&gt; --template typescript</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Swift</title>
    <url>/2023/01/17/Swift/</url>
    <content><![CDATA[<p>规划在未来完善 目前优先级更高的是<code>大数据技术栈</code></p>
<span id="more"></span>

<h1 id="组件使用"><a href="#组件使用" class="headerlink" title="组件使用"></a>组件使用</h1><h2 id="Button-按钮"><a href="#Button-按钮" class="headerlink" title="Button(按钮)"></a>Button(按钮)</h2><blockquote>
<p>参考: <a href="https://developer.apple.com/documentation/swiftui/button">https://developer.apple.com/documentation/swiftui/button</a></p>
</blockquote>
<h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">struct Button&lt;Label&gt; where Label : View</span><br></pre></td></tr></table></figure>

<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>您可以通过提供操作和标签来创建按钮。该操作是一种方法或闭包属性，当用户单击或点击按钮时它会执行某些操作。标签是描述按钮操作的视图——例如，通过显示文本、图标或两者</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Button</span>(action: &#123;&#125;) &#123;</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Sign In&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h1><ul>
<li><p>Swift 获取 UUID</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>hadoop</title>
    <url>/2023/02/07/hadoop/</url>
    <content><![CDATA[<h1 id="Hadoop-为什么而生"><a href="#Hadoop-为什么而生" class="headerlink" title="Hadoop 为什么而生"></a>Hadoop 为什么而生</h1><p>Hadoop 的出生是为了解决<code>海量</code>的数据<code>计算和存储</code>而生</p>
<span id="more"></span>

<h1 id="Hadoop-的版本介绍"><a href="#Hadoop-的版本介绍" class="headerlink" title="Hadoop 的版本介绍"></a>Hadoop 的版本介绍</h1><table>
<thead>
<tr>
<th>组件\版本</th>
<th>V1.x</th>
<th>V2.x</th>
<th>V3.x</th>
</tr>
</thead>
<tbody><tr>
<td>资源调度</td>
<td>MapReduce</td>
<td>YARN</td>
<td>YARN</td>
</tr>
<tr>
<td>计算组件</td>
<td>MapReduce</td>
<td>MapReduce</td>
<td>MapReduce</td>
</tr>
<tr>
<td>存储组件</td>
<td>HDFS</td>
<td>HDFS</td>
<td>HDFS</td>
</tr>
<tr>
<td>辅助组件</td>
<td>COMMON</td>
<td>COMMON</td>
<td>COMMON</td>
</tr>
</tbody></table>
<h1 id="YARN"><a href="#YARN" class="headerlink" title="YARN"></a>YARN</h1><p>yarn 作为资源调度组件</p>
<h1 id="安装-Hadoop-集群"><a href="#安装-Hadoop-集群" class="headerlink" title="安装 Hadoop 集群"></a>安装 Hadoop 集群</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>安装 epel-release</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure>

<ul>
<li>安装 net-tool(最小软件操作系统则需要安装)</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y net-tool</span><br></pre></td></tr></table></figure>

<ul>
<li>安装 vim(最小软件操作系统则需要安装)</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y vim</span><br></pre></td></tr></table></figure>

<ul>
<li>安装 rsync(最小软件操作系统则需要安装)</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y rsync</span><br></pre></td></tr></table></figure>

<ul>
<li>关闭防火墙</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>

<ul>
<li>虚拟机创建自定义用户(不用执行)</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">useradd bnyte</span><br><span class="line">passwd $&#123;username&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>配置 bnyte 用户具有 root 权限(不用执行)</li>
</ul>
<blockquote>
<p>修改&#x2F;etc&#x2F;sudoers 文件，在%wheel 这行下面添加一行，如下所示：</p>
</blockquote>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">vim /etc/sudoers</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Allow root to run any commands anywhere</span></span></span><br><span class="line">root ALL=(ALL) ALL</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Allows people in group wheel to run all commands</span></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">wheel ALL=(ALL) AL</span></span><br><span class="line"></span><br><span class="line">bnyte ALL=(ALL) NOPASSWD:ALL</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意：bnyte 这一行不要直接放到 root 行下面，因为所有用户都属于 wheel 组，你先</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置了 bnyte 具有免密功能，但是程序执行到%wheel 行时，该功能又被覆盖回需要</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">密码。所以 bnyte 要放到%wheel 这行下面。</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>为方便开发最好配置 hosts、配置高可用集群克隆多台模板机器运行并配置网卡</p>
</blockquote>
<ul>
<li>安装 JDK</li>
</ul>
<p>略</p>
<ul>
<li>安装 HadoopV3.0.3</li>
</ul>
<blockquote>
<p>配置 Hadoop 的<code>bin</code>和<code>sbin</code>到 path 即可</p>
<p>配置文件</p>
</blockquote>
<p><code> vim /etc/profile.d/software.sh</code></p>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">!/bin/bash</span></span><br><span class="line">export JAVA_HOME=/opt/module/jdk1.8.0_212</span><br><span class="line">export HADOOP_HOME=/opt/module/hadoop-3.1.3</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</span><br></pre></td></tr></table></figure>

<blockquote>
<p>目录结构说明</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin: 存放对Hadoop相关服务（hdfs、yarn、MapReduce）进行操作的脚本</span><br><span class="line">etc: Hadoop的配置文件目录, 存放Hadoop的配置文件</span><br><span class="line">lib: 存放Hadoop的本地库(对数据进行压缩解压缩功能)</span><br><span class="line">sbin: 存放启动或停止Hadoop相关服务的脚本</span><br><span class="line">share: 存放Hadoop的依赖jar包,文档,和官方案例</span><br></pre></td></tr></table></figure>

<h1 id="拷贝环境到多台机器"><a href="#拷贝环境到多台机器" class="headerlink" title="拷贝环境到多台机器"></a>拷贝环境到多台机器</h1><ul>
<li>拷贝 Java 和 Hadoop 到目标机器(不用执行)</li>
</ul>
<blockquote>
<p>通过 hostname 拷贝文件或文件夹</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">工具名称</span></span><br><span class="line">application_name=cptool</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">定义日志等级</span></span><br><span class="line">error=&quot;[error - $application_name]: &quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取需要拷贝的源路径</span></span><br><span class="line">source_dir=$1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">文件不存在退出</span></span><br><span class="line">if [[ -z $source_dir ]]; then</span><br><span class="line">        echo $error source_dir cannot be null</span><br><span class="line">        exit</span><br><span class="line">else</span><br><span class="line">        # 输入文件路径存在，找该文件 文件存在</span><br><span class="line">        if [[ -d $source_dir || -f $source_dir ]]; then</span><br><span class="line">                for node_num in &#123;101..102&#125;</span><br><span class="line">                do</span><br><span class="line">                        node=hadoop$node_num</span><br><span class="line">                        scp -r $source_dir root@$node:$source_dir</span><br><span class="line">                done</span><br><span class="line">        # 文件不存在</span><br><span class="line">        else</span><br><span class="line">                echo $error filepath $source_dir not found</span><br><span class="line">        fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<ul>
<li>配置 xsync</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1. 判断参数个数</span></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo Not Enough Arguement!</span><br><span class="line">    exit;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2. 遍历集群所有机器</span></span><br><span class="line">for host in hadoop101 hadoop102</span><br><span class="line">do</span><br><span class="line">    echo ==================== $host ====================</span><br><span class="line">    #3. 遍历所有目录，挨个发送</span><br><span class="line">    for file in $@</span><br><span class="line">    do</span><br><span class="line">    #4. 判断文件是否存在</span><br><span class="line">    if [ -e $file ]</span><br><span class="line">    then</span><br><span class="line">        #5. 获取父目录</span><br><span class="line">        pdir=$(cd -P $(dirname $file); pwd)</span><br><span class="line">        #6. 获取当前文件的名称</span><br><span class="line">        fname=$(basename $file)</span><br><span class="line">        ssh $host &quot;mkdir -p $pdir&quot;</span><br><span class="line">        rsync -av $pdir/$fname $host:$pdir</span><br><span class="line">    else</span><br><span class="line">        echo $file does not exists!</span><br><span class="line">    fi</span><br><span class="line">    done</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<ul>
<li>配置免密登录</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id &#123;hostname&#125;</span><br></pre></td></tr></table></figure>

<h1 id="运行-Hadoop"><a href="#运行-Hadoop" class="headerlink" title="运行 Hadoop"></a>运行 Hadoop</h1><h2 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h2><blockquote>
<p>本地启动仅作为体验用 我发使用 hdfs yarn 等组件(单机)</p>
</blockquote>
<h3 id="案例-wordcount"><a href="#案例-wordcount" class="headerlink" title="案例(wordcount)"></a>案例(wordcount)</h3><ul>
<li>在<code>$&#123;HADOOP_HOME&#125;</code>创建<code>input/word.txt</code>文件夹及文件并输入字符</li>
</ul>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">bnyte</span><br><span class="line">liujixiang</span><br><span class="line">liuyang</span><br><span class="line">shuaige</span><br><span class="line">wozuishuaiqi</span><br></pre></td></tr></table></figure>

<ul>
<li>统计每个名字出现的次数</li>
</ul>
<p>执行计算</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount wcinput/ wcoutput</span><br></pre></td></tr></table></figure>

<p><code>wordcount</code>: 统计字符次数</p>
<p><code>wcinput/</code>: 指定需要统计的文件所在的目录</p>
<p><code>wcoutput</code>: 指定结果输出目录(如果文件已经存在则会直接报错),<code>_SUCCESS</code>文件用作标识本次执行成功,没有其他数据.</p>
<h2 id="伪集群启动"><a href="#伪集群启动" class="headerlink" title="伪集群启动"></a>伪集群启动</h2><blockquote>
<p>伪集群可以使用 Hadoop 的所有功能且使用<code>SFTP</code>作为存储组件(单机)</p>
</blockquote>
<h2 id="集群启动"><a href="#集群启动" class="headerlink" title="集群启动"></a>集群启动</h2><blockquote>
<p>使用所有 Hadoop 组件功能并且支持多节点、高可用(集群模式)</p>
</blockquote>
<h3 id="集群配置"><a href="#集群配置" class="headerlink" title="集群配置"></a>集群配置</h3><h4 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a>集群规划</h4><p>Tips:</p>
<blockquote>
<p>NameNode 和 SecondaryNameNode 不要安装在同一台服务器</p>
<p>ResourceManager 也很消耗内存，不要和 NameNode、SecondaryNameNode 配置在<br>同一台机器上。</p>
</blockquote>
<table>
<thead>
<tr>
<th>组件\机器</th>
<th>hadoop100</th>
<th>hadoop101</th>
<th>hadoop102</th>
</tr>
</thead>
<tbody><tr>
<td>hdfs</td>
<td>NameNode\DataNode</td>
<td>DataNode</td>
<td>SecondaryNameNode\DataNode</td>
</tr>
<tr>
<td>计算组件</td>
<td>NodeManager</td>
<td>ResourceManager\NodeManager</td>
<td>NodeManager</td>
</tr>
</tbody></table>
<h4 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h4><p>Hadoop 配置文件分两类：默认配置文件和自定义配置文件，只有用户想修改某一默认<br>配置值时，才需要修改自定义配置文件，更改相应属性值。</p>
<ul>
<li>默认配置文件</li>
</ul>
<table>
<thead>
<tr>
<th>要获取的默认文件</th>
<th>hadoop100</th>
</tr>
</thead>
<tbody><tr>
<td><code>core-default.xml</code></td>
<td>hadoop-common-3.1.3.jar&#x2F;core-default.xml</td>
</tr>
<tr>
<td><code>hdfs-default.xml</code></td>
<td>hadoop-hdfs-3.1.3.jar&#x2F;hdfs-default.xml</td>
</tr>
<tr>
<td><code>yarn-default.xml</code></td>
<td>hadoop-yarn-common-3.1.3.jar&#x2F;yarn-default.xml</td>
</tr>
<tr>
<td><code>mapred-default.xml</code></td>
<td>hadoop-mapreduce-client-core-3.1.3.jar&#x2F;mapred-default.xml</td>
</tr>
</tbody></table>
<ul>
<li>自定义配置文件</li>
</ul>
<p><code>core-site.xml</code>、<code>hdfs-site.xml</code>、<code>yarn-site.xml</code>、<code>mapred-site.xml</code> 四个配置文件存放在<code>$HADOOP_HOME/etc/hadoop</code> 这个路径上，用户可以根据项目需求重新进行修改配置。</p>
<ul>
<li>core-size.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定 NameNode 的地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop100:8020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定 hadoop 数据的存储目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/module/hadoop-3.1.3/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置 HDFS 网页登录使用的静态用户为 atguigu --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.http.staticuser.user<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bnyte<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>hdfs-site.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- nn web 端访问地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop100:9870<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2nn web 端访问地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop102:9868<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>yarn-site.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定 MR 走 shuffle --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定 ResourceManager 的地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop101<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 环境变量的继承 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.env-whitelist<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>mapred-site.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定 MapReduce 程序运行在 Yarn 上 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>将配置好的配置分发给其他的节点</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xsync /opt/module/hadoop3.1.3/etc/hadoop/</span><br></pre></td></tr></table></figure>

<ul>
<li>配置&#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;etc&#x2F;hadoop&#x2F;workers</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hadoop100</span><br><span class="line">hadoop101</span><br><span class="line">hadoop102</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：这一步配置不可以有任何的空格</p>
</blockquote>
<h4 id="群起集群"><a href="#群起集群" class="headerlink" title="群起集群"></a>群起集群</h4><blockquote>
<p>如果是第一次启动集群需要在<code>hadoop100</code>初始化<code>NameNode</code>(注意：格式<br>化 NameNode，会产生新的集群 id，导致 NameNode 和 DataNode 的集群 id 不一致，集群找<br>不到已往数据。如果集群在运行过程中报错，需要重新格式化 NameNode 的话，一定要先停<br>止 namenode 和 datanode 进程，并且要删除所有机器的 data 和 logs 目录，然后再进行格式<br>化。)</p>
</blockquote>
<ul>
<li>初始化集群(第一次启动需要)</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hdfs namenode -format # 数据会被清空</span><br></pre></td></tr></table></figure>

<ul>
<li>启动集群</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sh $&#123;HADOOP_HOME&#125;/sbin/start-dfs.sh</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果是使用<code>root</code>做的操作可能会报如下错</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Starting namenodes on [hadoop100]</span><br><span class="line">ERROR: Attempting to operate on hdfs namenode as root</span><br><span class="line">ERROR: but there is no HDFS_NAMENODE_USER defined. Aborting operation.</span><br><span class="line">Starting datanodes</span><br><span class="line">ERROR: Attempting to operate on hdfs datanode as root</span><br><span class="line">ERROR: but there is no HDFS_DATANODE_USER defined. Aborting operation.</span><br><span class="line">Starting secondary namenodes [hadoop102]</span><br><span class="line">ERROR: Attempting to operate on hdfs secondarynamenode as root</span><br><span class="line">ERROR: but there is no HDFS_SECONDARYNAMENODE_USER defined. Aborting operation.</span><br></pre></td></tr></table></figure>

<blockquote>
<p>解决方案</p>
</blockquote>
<ul>
<li>对于 start-dfs.sh 和 stop-dfs.sh 文件，添加下列参数</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">HDFS_DATANODE_USER=root</span><br><span class="line">HADOOP_SECURE_DN_USER=hdfs</span><br><span class="line">HDFS_NAMENODE_USER=root</span><br><span class="line">HDFS_SECONDARYNAMENODE_USER=root</span><br></pre></td></tr></table></figure>

<ul>
<li>对于 start-yarn.sh 和 stop-yarn.sh 文件，添加下列参数</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span></span><br><span class="line">YARN_RESOURCEMANAGER_USER=root</span><br><span class="line">HADOOP_SECURE_DN_USER=yarn</span><br><span class="line">YARN_NODEMANAGER_USER=root</span><br></pre></td></tr></table></figure>

<ul>
<li>在配置了 ResourceManager 的节点<code>hadoop101</code>启动 YARN</li>
</ul>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">./sbin/start-yarn.sh</span><br></pre></td></tr></table></figure>

<ul>
<li><p>Web 端访问<code>http://hadoop100:9870</code> HDFS 的 NameNode</p>
</li>
<li><p>Web 端访问<code>http://hadoop101:8088</code>查看 YARN 的 ResourceManager</p>
</li>
</ul>
<h4 id="集群基本测试"><a href="#集群基本测试" class="headerlink" title="集群基本测试"></a>集群基本测试</h4><blockquote>
<p>上传文件到集群</p>
</blockquote>
<ul>
<li>上传小文件</li>
</ul>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">hadoop fs -mkdir /input  # 在hdfs创建文件夹</span><br><span class="line">hadoop fs -put $&#123;HADOOP_HOME&#125;/wcinput/word.txt /input # -put上传文件 本地文件 hdfs服务器路径</span><br></pre></td></tr></table></figure>

<ul>
<li>查看上传结果</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 进入hdfs控制台界面`hadoop100:9870`</span><br><span class="line">2. Utilities -&gt; Browse the file system 查看文件系统</span><br></pre></td></tr></table></figure>

<ul>
<li>查看 hdfs 文件保存路径，查看三台集群储存的数据确认高可用特性</li>
</ul>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">cd $&#123;HADOOP_HOME&#125;/data/dfs/data/current/BP-739053608-192.168.100.100-1650959465447/current/finalized/subdir0/subdir0/</span><br><span class="line">ll # 这个位置不带meta的文件就是数据文件了，在其他的集群也查看确认一下</span><br></pre></td></tr></table></figure>

<ul>
<li>从 hdfs 下载数据</li>
</ul>
<blockquote>
<p>hadoop fs -get ${HDFS_FILEPATH} ${LOCAL_DOWNLOAD_PATH}</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -get /input/word.txt ./</span><br></pre></td></tr></table></figure>

<ul>
<li>执行 wordcount 程序</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># hadoop jar &#123;execute_jar&#125; &#123;jarpath&#125; &#123;type&#125; &#123;loadfile&#125; &#123;execution_result_path&#125;</span><br><span class="line">hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /input/word.txt /wc/output</span><br></pre></td></tr></table></figure>

<h4 id="配置历史服务器"><a href="#配置历史服务器" class="headerlink" title="配置历史服务器"></a>配置历史服务器</h4><p>为了查看程序的历史运行情况，需要配置一下历史服务器。</p>
<ul>
<li>配置<code>mapred-site.xml</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 历史服务器端地址 --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hadoop100:10020&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;!-- 历史服务器 web 端地址 --&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hadoop100:19888&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>分发配置</p>
</li>
<li><p>启动历史服务器</p>
</li>
</ul>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">mapred --daemon start historyserver</span><br><span class="line">jps # 查看是否启动成功</span><br></pre></td></tr></table></figure>

<ul>
<li>访问历史服务器 web 端<code>http://hadoop100:19888/jobhistory</code></li>
</ul>
<h4 id="配置日志的聚集"><a href="#配置日志的聚集" class="headerlink" title="配置日志的聚集"></a>配置日志的聚集</h4><p>日志聚集概念：应用运行完成以后，将程序运行日志信息上传到 HDFS 系统上</p>
<p><img src="/images/1.png"></p>
<blockquote>
<p>开启日志聚集功能，需要重新启动 NodeManager、ResourceManager 和 HistoryServer</p>
</blockquote>
<ul>
<li>配置<code>yarn-site.xml</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 开启日志聚集功能 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.log-aggregation-enable&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;true&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;!-- 设置日志聚集服务器地址 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.log.server.url&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;http://hadoop100:19888/jobhistory/logs&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;!-- 设置日志保留时间为 7 天 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.log-aggregation.retain-seconds&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;604800&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>分发配置</p>
</li>
<li><p>关闭 NodeManager、ResourceManager、HistoryServer</p>
</li>
</ul>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">stop-yarn.sh # 关闭yarn</span><br><span class="line">mapred --deamon stop historyservice</span><br><span class="line"></span><br><span class="line">start-yarn.sh # 启动yarn</span><br><span class="line">mapred --daemon start historyserver</span><br></pre></td></tr></table></figure>

<h4 id="集群时间同步"><a href="#集群时间同步" class="headerlink" title="集群时间同步"></a>集群时间同步</h4><blockquote>
<p>解决不同集群之中的所有集群时间不同这个时候 yarn 调度的时间不同其他节点发生冲突可能导致任务不会执行</p>
<p>如果服务器在公网环境（能连接外网），可以不采用集群时间同步，因为服务器会定期 和公网时间进行校准；</p>
<p>如果服务器在内网环境，必须要配置集群时间同步，否则时间久了，会产生时间偏差， 导致集群执行任务时间不同步。</p>
</blockquote>
<ul>
<li>需求</li>
</ul>
<p>找一个机器，作为时间服务器，所有的机器与这台集群时间进行定时的同步，生产环境<br>根据任务对时间的准确程度要求周期同步。测试环境为了尽快看到效果，采用 1 分钟同步一<br>次。</p>
<p><img src="/images/2.png"></p>
<h5 id="时间服务器配置（必须-root-用户）"><a href="#时间服务器配置（必须-root-用户）" class="headerlink" title="时间服务器配置（必须 root 用户）"></a>时间服务器配置（必须 root 用户）</h5><ul>
<li>查看所有节点 ntpd 服务状态和开机自启动状态</li>
</ul>
<figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">systemctl status ntpd</span><br><span class="line">systemctl start ntpd</span><br><span class="line">systemctl is-enabled ntpd</span><br></pre></td></tr></table></figure>

<ul>
<li>修改 <code>hadoop100</code> 的 <code>ntp.conf</code> 配置文件</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/ntp.conf</span><br></pre></td></tr></table></figure>

<p>修改 1（授权 192.168.100.0-192.168.100.255 网段上的所有机器可以从这台机器上查询和同步时间）</p>
<blockquote>
<p>restrict 192.168.100.0 mask 255.255.255.0 nomodify notrap</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">restrict 192.168.100.0 mask 255.255.255.0 nomodify notrap</span><br></pre></td></tr></table></figure>

<p>修改 2（集群在局域网中，不使用其他互联网上的时间）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server 0.centos.pool.ntp.org iburst</span><br><span class="line">server 1.centos.pool.ntp.org iburst</span><br><span class="line">server 2.centos.pool.ntp.org iburst</span><br><span class="line">server 3.centos.pool.ntp.org iburst</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将上面配置改为如下配置</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server 3.centos.pool.ntp.org iburst</span></span><br></pre></td></tr></table></figure>

<p>添加 3（当该节点丢失网络连接，依然可以采用本地时间作为时间服务器为集群中的其他节点提供时间同步）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server 127.127.1.0</span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br></pre></td></tr></table></figure>

<ul>
<li>修改 hadoop100 的&#x2F;etc&#x2F;sysconfig&#x2F;ntpd 文件</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/sysconfig/ntpd</span><br></pre></td></tr></table></figure>

<p>增加内容如下（让硬件时间与系统时间一起同步）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SYNC_HWCLOCK=yes</span><br></pre></td></tr></table></figure>

<ul>
<li>重新启动 ntpd 服务</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start ntpd</span><br></pre></td></tr></table></figure>

<ul>
<li>设置 ntpd 服务开机启动</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable ntpd</span><br></pre></td></tr></table></figure>

<h5 id="其他机器配置（必须-root-用户）"><a href="#其他机器配置（必须-root-用户）" class="headerlink" title="其他机器配置（必须 root 用户）"></a>其他机器配置（必须 root 用户）</h5><ul>
<li>关闭所有节点上 ntp 服务和自启动</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop ntpd</span><br><span class="line">sudo systemctl disable ntpd</span><br><span class="line">sudo systemctl stop ntpd</span><br><span class="line">sudo systemctl disable ntpd</span><br></pre></td></tr></table></figure>

<ul>
<li>在其他机器配置 1 分钟与时间服务器同步一次</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo crontab -e</span><br></pre></td></tr></table></figure>

<ul>
<li>编写定时任务如下：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*/1 * * * * /usr/sbin/ntpdate hadoop102</span><br></pre></td></tr></table></figure>

<ul>
<li>修改任意机器时间</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo date -s &quot;2021-9-11 11:11:11&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>1 分钟后查看机器是否与时间服务器同步</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo date</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>学习</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>python使用经验技巧</title>
    <url>/2023/01/04/python%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>这篇文章主要记录个人在 python 使用中遇到的一些问题记录和一些使用技巧，会持续连载</p>
<span id="more"></span>

<h1 id="Python-使用包管理"><a href="#Python-使用包管理" class="headerlink" title="Python 使用包管理"></a>Python 使用包管理</h1><ul>
<li>安装 PIP</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载安装脚本</span></span><br><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line"><span class="comment"># 运行安装脚本</span></span><br><span class="line">sudo python3 get-pip.py</span><br><span class="line"><span class="comment"># 确认是否安装成功</span></span><br><span class="line">pip --version</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>连载</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>对接支付平台</title>
    <url>/2023/03/07/%E5%AF%B9%E6%8E%A5%E6%94%AF%E4%BB%98%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<p>本文主要连载各大支付平台的对接经验，包含我的<a href="https://github.com/bnyte/payment">SDK库</a>相关文档也会集成在这里。</p>
<blockquote>
<p>Github: <a href="https://github.com/bnyte/payment">https://github.com/bnyte/payment</a></p>
</blockquote>
<span id="more"></span>

<h1 id="Apple-Store"><a href="#Apple-Store" class="headerlink" title="Apple Store"></a>Apple Store</h1><h1 id="Google-Play"><a href="#Google-Play" class="headerlink" title="Google Play"></a>Google Play</h1><h1 id="Alipay"><a href="#Alipay" class="headerlink" title="Alipay"></a>Alipay</h1><h1 id="WechatPay"><a href="#WechatPay" class="headerlink" title="WechatPay"></a>WechatPay</h1>]]></content>
      <tags>
        <tag>连载</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫学习</title>
    <url>/2023/01/04/%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>由于最近对爬虫比较感兴趣(主要原因是别人会我不会，我难受，我可以用它不干啥 但是我必须得会～)，所以抽时间学了一下 python 爬虫，正好整合一下之前学习的 python，这篇文章会持续更新，记录一下自己的<code>python</code>爬虫经验。</p>
<span id="more"></span>
]]></content>
      <tags>
        <tag>学习</tag>
        <tag>连载</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB</title>
    <url>/2023/03/22/MongoDB/</url>
    <content><![CDATA[<p>本文连载<code>mongodb</code>学习以及使用经验等相关笔记</p>
<span id="more"></span>

<h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -itd --name mongo -p 27017:27017 mongo --auth</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参数解释</p>
</blockquote>
<ul>
<li>–auth 则表示使用密码才能登录访问</li>
</ul>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul>
<li>基础配置</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器 如果高于6.0版本使用 docker <span class="built_in">exec</span> -it mongo mongosh admin</span></span><br><span class="line">docker exec -it mongo mongo admin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建一个名为 admin，密码为 123456 的超级用户。</span></span><br><span class="line">db.createUser(&#123; user:&#x27;admin&#x27;,pwd:&#x27;123456&#x27;,roles:[ &#123; role:&#x27;userAdminAnyDatabase&#x27;, db: &#x27;admin&#x27;&#125;,&quot;readWriteAnyDatabase&quot;]&#125;);</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">尝试使用上面创建的用户信息进行连接 返回1则表示成功</span></span><br><span class="line">db.auth(&#x27;admin&#x27;, &#x27;123456&#x27;);</span><br></pre></td></tr></table></figure>

<ul>
<li>配置远程访问</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mongo bash</span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line">apt-get install vim</span><br><span class="line"><span class="comment">#修改 mongo 配置文件</span></span><br><span class="line">vim /etc/mongod.conf.orig</span><br></pre></td></tr></table></figure>

<p>将其中的<code>bindIp: 127.0.0.1</code>注释掉<code># bindIp: 127.0.0.1</code> 或者改成 <code>bindIp: 0.0.0.0</code> 即可开启远程连接</p>
]]></content>
  </entry>
</search>
